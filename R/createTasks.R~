#' Create new tasks for comparisons
#' 
#' This function posts batches or comparisons to Mechanical Turk as tasks
#' 
#' @param comp_ids Comma-separated list of comparison ids for which to create tasks, if comparisons were not created under a batch. Default is NULL. Leave as NULL if batch_id is provided.
#' @param task_setting Task Setting to use for the created tasks, if comparisons were not created under a batch. Default is NULL. Leave as NULL if batch_id is provided.
#' @param batch_id Batch ID to be used if comparisons created under a batch.
#'
#' @return out ID for batch of comparisons
#' @author David Carlson
#' @examples
#' 
#' \dontrun{
#' createTasks(ids=10,task_setting=2)
#' createTasks(batch_id=204)
#' }
#' @rdname createTasks
#' @seealso \code{\link{createTasksTimed}}, \code{\link{batchesWrapper}}, \code{\link{checkCert}},
#' \code{\link{checkWorkers}},\code{\link{createBatches}},\code{\link{createCert}},\code{\link{createTasks}}, 
#' \code{\link{createPairwise}}, \code{\link{extractCoef}},\code{\link{fitStan}},\code{\link{fitStanHier}},
#' \code{\link{givetakeCert}},\code{\link{makeCompsSep}},\code{\link{readInData}}, \code{\link{readText}},
#' \code{\link{repostExpired}},\code{\link{revokeCert}}, \code{\link{sentimentIt}}, \code{\link{batchStatus}},
#' \code{\link{extractCoef}}
#' @export
createTasks <- function(comp_ids=NULL, task_setting=NULL, batch_id){
  if(is.null(comp_ids)){
    args <- paste('batch_id=', batch_id,"" ,sep='')
  }else{
    args <- paste('hit_setting=', task_setting, '&ids=', paste(comp_ids,collapse=','), sep='')
  }
  myget <- GET(paste('http://sentimentit.com/api/comparisons/create_hits?',
                     args, sep=''))
  mytry <- try(out<-fromJSON(rawToChar(as.raw(myget$content))))
  if(class(mytry) == "try-error"){
    out <- 'error'
  }
  return(out)
}

