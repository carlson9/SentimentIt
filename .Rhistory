install.packages('knitr')
library(plm)
library(RCurl)
dat_url <- getURL('https://raw.githubusercontent.com/carlson9/Fall2016RSessions/master/Session8/garrett1998.tab')
data <- read.table(text = dat_url, row.names=NULL, header=TRUE)
head(data)
mod1 <- lm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data)
mod1.1 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,
model='pooling')
mod2 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,effect='individual',
index = 'country',model='within')
mod3 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,effect='time',
index = 'year',model='within')
mod4 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,effect='twoways',
index = c('country','year'))
coeftest(mod4)
library(lmtest)
coeftest(mod4)
coeftest(mod4,vcov=vcovBK)
coeftest(mod4, vcov=function(x) vcovBK(x, type="HC1", cluster='group'))
coeftest(mod4, vcov=function(x) vcovBK(x, type="HC1", cluster='time'))
coeftest(mod4,vcov=vcovDC)
?vcovDC
coeftest(mod4, vcov=function(x) vcovHC(x, cluster='group'))
mod5 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab + gdpl,data=data,
effect='twoways',
index = c('country','year'))
coeftest(mod5, vcov=function(x) vcovBK(x, type="HC1", cluster='group'))
library(tgp)
set.seed(99)
x = rnorm(100)
t=1:100
y=x+sin(t/5)
plot(x,y)
plot(t,y)
mod <- bgp(X=cbind(x,t), Z=y, trace = TRUE)
plot(mod)
plot(mod, proj=c(1))
plot(mod, proj=c(2))
library(plm)
?plm
library(RCurl)
dat_url <- getURL('https://raw.githubusercontent.com/carlson9/Fall2016RSessions/master/Session8/garrett1998.tab')
data <- read.table(text = dat_url, row.names=NULL, header=TRUE)
head(data)
mod1 <- lm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data)
summary(mod1)
mod1.1 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,
model='pooling')
summary(mod1.1)
mod2 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,effect='individual',
index = 'country',model='within')
summary(mod2)
mod3 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,effect='time',
index = 'year',model='within')
mod3 <- lm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab+as.factor(year),data=data)
summary(mod3)
coeftest(mod4)
library(lmtest)
coeftest(mod4)
mod4 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,effect='twoways',
index = c('country','year'))
coeftest(mod4)
coeftest(mod4,vcov=vcovBK)
coeftest(mod4, vcov=function(x) vcovBK(x, type="HC1", cluster='group'))
coeftest(mod4, vcov=function(x) vcovBK(x, type="HC1", cluster='time'))
coeftest(mod4,vcov=vcovDC)
coeftest(mod4, vcov=function(x) vcovHC(x, cluster='group'))
mod5 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab + gdpl,data=data,
effect='twoways',
index = c('country','year'))
coeftest(mod5, vcov=function(x) vcovBK(x, type="HC1", cluster='group'))
library(nlme)
mod6 <- gls(gdp ~ demand + trade +
capmob + oild +
corp*leftlab + gdpl,
correlation=corAR1(form=~year|country),data=data)
summary(mod6)
mod7 <- gls(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,
correlation=corAR1(form=~year|country),data=data)
summary(mod7)
?phtest
mod8 <- plm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data,
effect='individual', model='random',
index = c('country'))
phtest(mod2, mod8)
library(tgp)
set.seed(99)
x = rnorm(100)
t=1:100
y=x+sin(t/5)
plot(x,y)
plot(t,y)
mod <- bgp(X=cbind(x,t), Z=y, trace = TRUE)
plot(mod)
plot(mod)
library(lme4)
mod9 <- lmer(gdp ~ demand + trade +
capmob + oild +
corp*leftlab + (1|country),data=data)
mod9
summary(mod9)
mod9 <- lm(gdp ~ demand + trade +
capmob + oild +
corp*leftlab,data=data)
summary(mod9)
library(sentimentIt)
revokeCert
email='carlson.david@wustl.edu'
password='SentimentIt'
cert='stm'
args <- list(email = email, auth_token = auth_token, certification = cert,
workers = workers)
auth_token=authenticate(email.password)
auth_token=authenticate(email,password)
auth_token
args <- list(email = email, auth_token = auth_token, certification = cert,
workers = workers)
args <- list(email = email, auth_token = auth_token, certification = cert,
workers = c('lyl','plp'))
args
toJSON(args, auto_unbox = TRUE)
sentimentIt::toJSON(args, auto_unbox = TRUE)
library(httr)
toJSON(args, auto_unbox = TRUE)
library(jsonlite)
toJSON(args, auto_unbox = TRUE)
revokeCert
revokeCert(email,password,'stm','plp')
revokeCert(email,password,'stm','plp')
revokeCert(email,password,'stm','plp')
revokeCert(email,password,'stm',c('plp','lll'))
grantCert(email,password,'stm',c('plp','lll'))
createCert(email,password,'stm',c('plp','lll'))
checkCert(email,password,'stm',c('plp','lll'))
checkCert(email,password,'stm',lll')
)
'
checkCert(email,password,'stm','lll')
checkCert(email,password,'stm','plp')
revokeCert(email,password,'stm',c('plp','lll'))
checkCert(email,password,'stm','plp')
createCert(email,password,'stm',c('plp','lll'))
revokeCert(email,password,'stm','lll')
checkCert(email,password,'stm','plp')
checkCert(email,password,'stm','lll')
revokeCert(email,password,'stm','lll')
revokeCert(email,password,'stm','lll')
checkCert(email,password,'stm','lll')
list(email = email, auth_token = auth_token, certification = cert, workers = workers)
list(email = email, auth_token = auth_token, certification = cert, workers = 'lll')
args=list(email = email, auth_token = auth_token, certification = cert, workers = 'lll')
toJSON(args, auto_unbox=TRUE)
args <- toJSON(args, auto_unbox=TRUE)
POST('https://www.sentimentit.com/api/certifications/revoke.json',
body = args, content_type_json(),
encode='json')
mypost <- POST('https://www.sentimentit.com/api/certifications/revoke.json',
body = args, content_type_json(),
encode='json')
unlist(fromJSON(rawToChar(as.raw(mypost$content))))
args=list(email = email, auth_token = auth_token, certification = cert, workers = c('lll'))
args <- toJSON(args, auto_unbox=TRUE)
args
args=list(email = email, auth_token = auth_token, certification = cert, workers = list('lll'))
args
args <- toJSON(args, auto_unbox=TRUE)
args
mypost <- POST('https://www.sentimentit.com/api/certifications/revoke.json',
body = args, content_type_json(),
encode='json')
unlist(fromJSON(rawToChar(as.raw(mypost$content))))
args=list(email = email, auth_token = auth_token, certification = cert, workers = list('lll','plp'))
args <- toJSON(args, auto_unbox=TRUE)
mypost <- POST('https://www.sentimentit.com/api/certifications/revoke.json',
body = args, content_type_json(),
encode='json')
unlist(fromJSON(rawToChar(as.raw(mypost$content))))
library(devtools)
install.packages('devtools')
library(devtools)
library(roxygen2)
install.packages('roxygen2')
library(roxygen2)
library(jsonlite)
library(httr)
library(plyr)
library(testthat)
setwd("~/SentimentIt")
current.code <- as.package("sentimentIt")
load_all(current.code)
build(current.code)
current.code <- as.package("sentimentIt")
load_all(current.code)
document(current.code)
build(current.code)
