vector<lower=0>[M] d2;
vector[K] b;
//  vector[K] b0;
//  cholesky_factor_corr[K] Lcorr;
//  cov_matrix[K] W;
//  vector<lower=0>[K] sigma;
}
model {
matrix[N,N] Sigma;
vector[N] mu;
matrix[N,K] Mu;
vector[M] d;
//  W ~ inv_wishart(rho, V);
for(m in 1:M){
d1[m] ~ gamma(1,20);
d2[m] ~ gamma(10,10);
d[m] = .5*(d1[m] + d2[m]);
}
for (i in 1:(N-1)) {
for (j in (i+1):N) {
vector[M] summand;
for(m in 1:M){
summand[m] = -pow(X_corr[i,m] - X_corr[j,m],2)/d[m];
}
Sigma[i,j] = exp(sum(summand));
Sigma[j,i] = Sigma[i,j];
}
}
for (i in 1:N){
for(k in 1:K){
Mu[i,k] = X[i,k]*b[k];
}
mu[i]=sum(Mu[i,1:K]);
}
for (i in 1:N)
Sigma[i,i] = 1 + nug; // + jitter
sig_sq ~ inv_gamma(1,1);
//  tau_sq ~ inv_gamma(1,1);
nug ~ exponential(1);
b ~ normal(0,10);
//  sigma ~ cauchy(0,5);
//  Lcorr ~ lkj_corr_cholesky(1);
//  b ~ multi_normal_cholesky(b0, sig_sq*tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal_cholesky(b0, tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal(b0, sig_sq*tau_sq*W);
y ~ multi_normal(mu,sig_sq*Sigma);
}'
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
summary(fit_fit)$summary
summary(lm(y~x+as.factor(t)+as.factor(Group)))
g.ef = rnorm(n.groups)
N=n.obs*n.groups
x=rnorm(n.groups*n.obs)
error = rnorm(n.groups*n.obs)
y=rep(g.ef,each=n.obs)+.5*x+error
repl = sample(1:length(y),1)
y[repl] = -5
x[repl] = 5
g=matrix(c(rep(1,n.obs),rep(0,N)), nrow=N, ncol=n.groups)
X = cbind(x, g)
K=dim(X)[2]
t=rep(1:n.obs,n.groups)
#tg = t*g
X_corr=cbind(x,t,g)
M=dim(X_corr)[2]
G=n.groups
Group = rep(1:n.groups, each=n.obs)
summary(lm(y~x+as.factor(t)+as.factor(Group)))
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
summary(lm(y~x+as.factor(t)+as.factor(Group)))
summary(fit_fit)$summary
g.ef = rnorm(n.groups)
N=n.obs*n.groups
x=rnorm(n.groups*n.obs)
error = rnorm(n.groups*n.obs)
y=rep(g.ef,each=n.obs)+.5*x+error
repl = sample(1:length(y),1)
y[repl] = -5
x[repl] = 5
g=matrix(c(rep(1,n.obs),rep(0,N)), nrow=N, ncol=n.groups)
X = cbind(x, g)
K=dim(X)[2]
t=rep(1:n.obs,n.groups)
#tg = t*g
X_corr=cbind(x,t,g)
M=dim(X_corr)[2]
G=n.groups
Group = rep(1:n.groups, each=n.obs)
summary(lm(y~x+as.factor(t)+as.factor(Group)))
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
summary(lm(y~x+as.factor(t)+as.factor(Group)))
summary(fit_fit)$summary
?dgamma
rgamma(10000,1,20)
rgamma(10000,1,1)
rgamma(10000,1,5)
summary(fit_fit)$summary
.35658
model_code = '
data {
int<lower=1> N;
int<lower=1> K;
int<lower=1> M;
matrix[N,K] X;
matrix[N,M] X_corr;
vector[N] y;
//  real<lower=0> rho;
//  matrix[K,K] V;
//  matrix[K,K] B;
//  vector[K] nu;
}
parameters {
real<lower=0> nug;
real<lower=0> sig_sq;
//  real<lower=0> tau_sq;
vector<lower=0>[M] d1;
vector<lower=0>[M] d2;
vector[K] b;
//  vector[K] b0;
//  cholesky_factor_corr[K] Lcorr;
//  cov_matrix[K] W;
//  vector<lower=0>[K] sigma;
}
model {
matrix[N,N] Sigma;
vector[N] mu;
matrix[N,K] Mu;
vector[M] d;
//  W ~ inv_wishart(rho, V);
for(m in 1:M){
d1[m] ~ gamma(1,5);
d2[m] ~ gamma(10,10);
d[m] = .5*(d1[m] + d2[m]);
}
for (i in 1:(N-1)) {
for (j in (i+1):N) {
vector[M] summand;
for(m in 1:M){
summand[m] = -pow(X_corr[i,m] - X_corr[j,m],2)/d[m];
}
Sigma[i,j] = exp(sum(summand));
Sigma[j,i] = Sigma[i,j];
}
}
for (i in 1:N){
for(k in 1:K){
Mu[i,k] = X[i,k]*b[k];
}
mu[i]=sum(Mu[i,1:K]);
}
for (i in 1:N)
Sigma[i,i] = 1 + nug; // + jitter
sig_sq ~ inv_gamma(1,1);
//  tau_sq ~ inv_gamma(1,1);
nug ~ exponential(1);
b ~ normal(0,10);
//  sigma ~ cauchy(0,5);
//  Lcorr ~ lkj_corr_cholesky(1);
//  b ~ multi_normal_cholesky(b0, sig_sq*tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal_cholesky(b0, tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal(b0, sig_sq*tau_sq*W);
y ~ multi_normal(mu,sig_sq*Sigma);
}'
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
.35658
summary(fit_fit)$summary
.35658
rgamma(10000,1,1)
rgamma(10000,10,10)
model_code = '
data {
int<lower=1> N;
int<lower=1> K;
int<lower=1> M;
matrix[N,K] X;
matrix[N,M] X_corr;
vector[N] y;
//  real<lower=0> rho;
//  matrix[K,K] V;
//  matrix[K,K] B;
//  vector[K] nu;
}
parameters {
real<lower=0> nug;
real<lower=0> sig_sq;
//  real<lower=0> tau_sq;
vector<lower=0>[M] d1;
vector<lower=0>[M] d2;
vector[K] b;
//  vector[K] b0;
//  cholesky_factor_corr[K] Lcorr;
//  cov_matrix[K] W;
//  vector<lower=0>[K] sigma;
}
model {
matrix[N,N] Sigma;
vector[N] mu;
matrix[N,K] Mu;
vector[M] d;
//  W ~ inv_wishart(rho, V);
for(m in 1:M){
d1[m] ~ gamma(1,20);
d2[m] ~ gamma(10,10);
d[m] = .5*(d1[m] + d2[m]);
}
for (i in 1:(N-1)) {
for (j in (i+1):N) {
vector[M] summand;
for(m in 1:M){
summand[m] = -pow(X_corr[i,m] - X_corr[j,m],2)/d[m];
}
Sigma[i,j] = exp(sum(summand));
Sigma[j,i] = Sigma[i,j];
}
}
for (i in 1:N){
for(k in 1:K){
Mu[i,k] = X[i,k]*b[k];
}
mu[i]=sum(Mu[i,1:K]);
}
for (i in 1:N)
Sigma[i,i] = 1 + nug; // + jitter
sig_sq ~ inv_gamma(1,1);
//  tau_sq ~ inv_gamma(1,1);
nug ~ exponential(1);
b ~ normal(0,10);
//  sigma ~ cauchy(0,5);
//  Lcorr ~ lkj_corr_cholesky(1);
//  b ~ multi_normal_cholesky(b0, sig_sq*tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal_cholesky(b0, tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal(b0, sig_sq*tau_sq*W);
y ~ multi_normal(mu,sig_sq*Sigma);
}'
g.ef = rnorm(n.groups)
N=n.obs*n.groups
x=rnorm(n.groups*n.obs)
error = rnorm(n.groups*n.obs)
y=rep(g.ef,each=n.obs)+.5*x+error
repl = sample(1:length(y),1)
y[repl] = -5
x[repl] = 5
g=matrix(c(rep(1,n.obs),rep(0,N)), nrow=N, ncol=n.groups)
X = cbind(x, g)
K=dim(X)[2]
t=rep(1:n.obs,n.groups)
#tg = t*g
X_corr=cbind(x,t,g)
M=dim(X_corr)[2]
G=n.groups
Group = rep(1:n.groups, each=n.obs)
summary(lm(y~x+as.factor(t)+as.factor(Group)))
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
summary(lm(y~x+as.factor(t)+as.factor(Group)))
summary(fit_fit)$summary
g.ef = rnorm(n.groups)
N=n.obs*n.groups
x=rnorm(n.groups*n.obs)
error = rnorm(n.groups*n.obs)
y=rep(g.ef,each=n.obs)+.5*x+error
repl = sample(1:length(y),1)
y[repl] = -5
x[repl] = 5
g=matrix(c(rep(1,n.obs),rep(0,N)), nrow=N, ncol=n.groups)
X = cbind(x, g)
K=dim(X)[2]
t=rep(1:n.obs,n.groups)
#tg = t*g
X_corr=cbind(x,t,g)
M=dim(X_corr)[2]
G=n.groups
Group = rep(1:n.groups, each=n.obs)
summary(lm(y~x+as.factor(t)+as.factor(Group)))
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
summary(lm(y~x+as.factor(t)+as.factor(Group)))
summary(fit_fit)$summary
library(lme4)
summary(lmer(y~x+(1|Group)+(1|t)))
model_code = '
data {
int<lower=1> N;
int<lower=1> K;
int<lower=1> M;
matrix[N,K] X;
matrix[N,M] X_corr;
vector[N] y;
//  real<lower=0> rho;
//  matrix[K,K] V;
//  matrix[K,K] B;
//  vector[K] nu;
}
parameters {
real<lower=0> nug;
real<lower=0> sig_sq;
//  real<lower=0> tau_sq;
vector<lower=0>[M] d1;
vector<lower=0>[M] d2;
vector[K] b;
//  vector[K] b0;
//  cholesky_factor_corr[K] Lcorr;
//  cov_matrix[K] W;
//  vector<lower=0>[K] sigma;
}
model {
matrix[N,N] Sigma;
vector[N] mu;
matrix[N,K] Mu;
vector[M] d;
//  W ~ inv_wishart(rho, V);
for(m in 1:M){
d1[m] ~ gamma(1,20);
d2[m] ~ gamma(10,10);
d[m] = .5*(d1[m] + d2[m]);
}
for (i in 1:(N-1)) {
for (j in (i+1):N) {
vector[M] summand;
for(m in 1:M){
summand[m] = -pow(X_corr[i,m] - X_corr[j,m],2)/d[m];
}
Sigma[i,j] = exp(sum(summand));
Sigma[j,i] = Sigma[i,j];
}
}
for (i in 1:N){
for(k in 1:K){
Mu[i,k] = X[i,k]*b[k];
}
mu[i]=sum(Mu[i,1:K]);
}
for (i in 1:N)
Sigma[i,i] = 1 + nug; // + jitter
sig_sq ~ inv_gamma(1,1);
//  tau_sq ~ inv_gamma(1,1);
nug ~ exponential(1);
b ~ normal(0,3);
//  sigma ~ cauchy(0,5);
//  Lcorr ~ lkj_corr_cholesky(1);
//  b ~ multi_normal_cholesky(b0, sig_sq*tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal_cholesky(b0, tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal(b0, sig_sq*tau_sq*W);
y ~ multi_normal(mu,sig_sq*Sigma);
}'
summary(fit_fit)$summary
.35804823
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
.35804823
summary(fit_fit)$summary
summary(lmer(y~x+(1|Group)+(1|t)))
summary(lm(y~x+as.factor(t)+as.factor(Group)))
0.33579
model_code = '
data {
int<lower=1> N;
int<lower=1> K;
int<lower=1> M;
matrix[N,K] X;
matrix[N,M] X_corr;
vector[N] y;
//  real<lower=0> rho;
//  matrix[K,K] V;
//  matrix[K,K] B;
//  vector[K] nu;
}
parameters {
real<lower=0> nug;
real<lower=0> sig_sq;
//  real<lower=0> tau_sq;
vector<lower=0>[M] d1;
vector<lower=0>[M] d2;
vector[K] b;
//  vector[K] b0;
//  cholesky_factor_corr[K] Lcorr;
//  cov_matrix[K] W;
//  vector<lower=0>[K] sigma;
}
model {
matrix[N,N] Sigma;
vector[N] mu;
matrix[N,K] Mu;
vector[M] d;
//  W ~ inv_wishart(rho, V);
for(m in 1:M){
d1[m] ~ gamma(1,1);
d2[m] ~ gamma(10,10);
d[m] = .5*(d1[m] + d2[m]);
}
for (i in 1:(N-1)) {
for (j in (i+1):N) {
vector[M] summand;
for(m in 1:M){
summand[m] = -pow(X_corr[i,m] - X_corr[j,m],2)/d[m];
}
Sigma[i,j] = exp(sum(summand));
Sigma[j,i] = Sigma[i,j];
}
}
for (i in 1:N){
for(k in 1:K){
Mu[i,k] = X[i,k]*b[k];
}
mu[i]=sum(Mu[i,1:K]);
}
for (i in 1:N)
Sigma[i,i] = 1 + nug; // + jitter
sig_sq ~ inv_gamma(1,1);
//  tau_sq ~ inv_gamma(1,1);
nug ~ exponential(1);
b ~ normal(0,3);
//  sigma ~ cauchy(0,5);
//  Lcorr ~ lkj_corr_cholesky(1);
//  b ~ multi_normal_cholesky(b0, sig_sq*tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal_cholesky(b0, tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal(b0, sig_sq*tau_sq*W);
y ~ multi_normal(mu,sig_sq*Sigma);
}'
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
0.33579
summary(fit_fit)$summary
model_code = '
data {
int<lower=1> N;
int<lower=1> K;
int<lower=1> M;
matrix[N,K] X;
matrix[N,M] X_corr;
vector[N] y;
//  real<lower=0> rho;
//  matrix[K,K] V;
//  matrix[K,K] B;
//  vector[K] nu;
}
parameters {
real<lower=0> nug;
real<lower=0> sig_sq;
//  real<lower=0> tau_sq;
vector<lower=0>[M] d1;
vector<lower=0>[M] d2;
vector[K] b;
//  vector[K] b0;
//  cholesky_factor_corr[K] Lcorr;
//  cov_matrix[K] W;
//  vector<lower=0>[K] sigma;
}
model {
matrix[N,N] Sigma;
vector[N] mu;
matrix[N,K] Mu;
vector[M] d;
//  W ~ inv_wishart(rho, V);
for(m in 1:M){
d1[m] ~ gamma(1,20);
d2[m] ~ gamma(10,10);
d[m] = .5*(d1[m] + d2[m]);
}
for (i in 1:(N-1)) {
for (j in (i+1):N) {
vector[M] summand;
for(m in 1:M){
summand[m] = -pow(X_corr[i,m] - X_corr[j,m],2)/d[m];
}
Sigma[i,j] = exp(sum(summand));
Sigma[j,i] = Sigma[i,j];
}
}
for (i in 1:N){
for(k in 1:K){
Mu[i,k] = X[i,k]*b[k];
}
mu[i]=sum(Mu[i,1:K]);
}
for (i in 1:N)
Sigma[i,i] = 1 + nug; // + jitter
sig_sq ~ inv_gamma(1,1);
//  tau_sq ~ inv_gamma(1,1);
nug ~ exponential(1);
b ~ normal(0,3);
//  sigma ~ cauchy(0,5);
//  Lcorr ~ lkj_corr_cholesky(1);
//  b ~ multi_normal_cholesky(b0, sig_sq*tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal_cholesky(b0, tau_sq*diag_pre_multiply(sigma,Lcorr));
//  b ~ multi_normal(b0, sig_sq*tau_sq*W);
y ~ multi_normal(mu,sig_sq*Sigma);
}'
fit_fit <- stan(model_code=model_code, data=list(X=X,N=N,K=K,y=y,M=M,X_corr=X_corr),
iter=500, chains=2)
0.33579
summary(fit_fit)$summary
library(sentimentIt)
?sentimentIt
library(sentimentIt)
?sentimentIt
readText
library(devtools)
library(roxygen2)
library(jsonlite)
library(httr)
library(plyr)
library(testthat)
setwd("~/SentimentIt")
current.code <- as.package("sentimentIt")
load_all(current.code)
document(current.code)
build(current.code)
